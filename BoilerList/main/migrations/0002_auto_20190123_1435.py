# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2019-01-23 14:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name=b'Service Category Name')),
                ('description', models.TextField(null=True, verbose_name=b'Service Category Description')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name=b'Service Category Group Name')),
                ('description', models.TextField(verbose_name=b'Service Category Group Description')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_comment', models.TextField(verbose_name=b'text_comment')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name=b'Created')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name=b'Job Name')),
                ('date_created', models.DateTimeField(auto_now=True, verbose_name=b'Date Created')),
                ('client_organization', models.CharField(max_length=64, verbose_name=b'What organization do you represent?')),
                ('description', models.TextField(max_length=256, verbose_name=b'Job Description')),
                ('deliverable', models.TextField(max_length=256, verbose_name=b'Deliverable')),
                ('duedate', models.DateTimeField(verbose_name=b'Date Due')),
                ('contact_information', models.CharField(max_length=256, null=True, verbose_name=b'Contact Information')),
                ('skill_required', models.CharField(max_length=256, null=True, verbose_name=b'Volunteer skills required')),
                ('hours_day', models.CharField(max_length=256, null=True, verbose_name=b'Number of hours per day')),
                ('closed', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(0, b'Pending'), (1, b'Approved'), (2, b'Disapproved'), (3, b'Closed')], default=0)),
                ('active', models.BooleanField(default=True)),
                ('approve', models.BooleanField(default=True)),
                ('activism', models.BooleanField(default=False)),
                ('arts', models.BooleanField(default=False)),
                ('civil', models.BooleanField(default=False)),
                ('school', models.BooleanField(default=False)),
                ('crisis', models.BooleanField(default=False)),
                ('criminal', models.BooleanField(default=False)),
                ('disaster', models.BooleanField(default=False)),
                ('economic', models.BooleanField(default=False)),
                ('entrepreneurship', models.BooleanField(default=False)),
                ('environment', models.BooleanField(default=False)),
                ('food', models.BooleanField(default=False)),
                ('housing', models.BooleanField(default=False)),
                ('immigrants', models.BooleanField(default=False)),
                ('individual', models.BooleanField(default=False)),
                ('mental', models.BooleanField(default=False)),
                ('poverty', models.BooleanField(default=False)),
                ('substance', models.BooleanField(default=False)),
                ('STEM', models.BooleanField(default=False)),
                ('transportation', models.BooleanField(default=False)),
                ('veterans', models.BooleanField(default=False)),
                ('voting', models.BooleanField(default=False)),
                ('other', models.CharField(blank=True, max_length=256, null=True, verbose_name=b'Other categories')),
                ('categories', models.ManyToManyField(related_name='jobs', to='main.Category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_job', 'Can view Job'), ('edit_job', 'Can edit Job'), ('is_creator', 'Is a creator of Job')),
            },
        ),
        migrations.CreateModel(
            name='JobRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied', models.NullBooleanField(default=False)),
                ('accepted', models.NullBooleanField(default=False)),
                ('declined', models.NullBooleanField(default=False)),
                ('confirmed', models.NullBooleanField(default=False)),
                ('completed', models.NullBooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobrequests', to='main.Job')),
            ],
            options={
                'permissions': (('view_jobrequest', 'Can view JobRequest'), ('edit_jobrequest', 'Can edit JobRequest'), ('edit_jobrequest_state', 'Can edit JobRequest state')),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name=b'Organization Name')),
                ('description', models.TextField(verbose_name=b'Organization Description')),
                ('contactinfo', models.CharField(max_length=64, null=True, verbose_name=b'Contact Information')),
                ('selectedproposal', models.CharField(max_length=64, null=True, verbose_name=b'Selected Community Proposal')),
                ('facultystaffname', models.CharField(max_length=64, null=True, verbose_name=b'Faculty / Staff Name')),
                ('coursetitle', models.CharField(max_length=64, null=True, verbose_name=b'Course Title')),
                ('department', models.CharField(max_length=64, null=True, verbose_name=b'Department')),
                ('freshman', models.BooleanField(default=False)),
                ('sophomore', models.BooleanField(default=False)),
                ('junior', models.BooleanField(default=False)),
                ('senior', models.BooleanField(default=False)),
                ('grad', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(0, b'Pending'), (1, b'Approved'), (2, b'Disapproved'), (3, b'Closed')], default=0)),
                ('active', models.BooleanField(default=True)),
                ('approve', models.BooleanField(default=True)),
                ('url', models.URLField(blank=True, verbose_name=b'Website')),
                ('phone_number', models.CharField(max_length=64, verbose_name=b'Organization phone number')),
                ('icon', models.ImageField(null=True, upload_to=b'organization')),
                ('available', models.BooleanField(choices=[(True, b'Accepting Jobs'), (False, b'Not accepting Jobs')], default=True)),
                ('categories', models.ManyToManyField(related_name='organizations', to='main.Category')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'permissions': (('view_organization', 'Can view Organization'), ('edit_organization', 'Can edit Organization'), ('is_admin', 'Is an Administrator')),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purdueuser', models.BooleanField(choices=[(True, b'Purdue Faculty / Staff'), (False, b'Community Organization')], default=True)),
                ('visited_views', models.CharField(default=b'', max_length=64, null=True)),
                ('first', models.CharField(max_length=128, null=True, verbose_name=b'firstname')),
                ('last', models.CharField(max_length=128, null=True, verbose_name=b'lastname')),
                ('organization', models.CharField(max_length=128, null=True, verbose_name=b'organization')),
                ('title', models.CharField(max_length=128, null=True, verbose_name=b'title')),
                ('phone', models.CharField(max_length=128, null=True, verbose_name=b'phone')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='jobrequest',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Organization'),
        ),
        migrations.AddField(
            model_name='job',
            name='organizations',
            field=models.ManyToManyField(null=True, through='main.JobRequest', to='main.Organization'),
        ),
        migrations.AddField(
            model_name='comment',
            name='jobrequest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.JobRequest'),
        ),
        migrations.AddField(
            model_name='category',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='main.CategoryGroup'),
        ),
    ]
